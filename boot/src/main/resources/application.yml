endpoints:
   api:
      enabled: true
logging:
   level:
      root: info
ontimize:
   corsfilter:
      enabled: true
   globalcors:
      corsConfigurations:
         '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            exposedHeaders: ["X-Auth-Token","Content-disposition","X-Requested-With"]
            allowedMethods:
               - GET
               - POST
               - PUT
               - OPTIONS
               - DELETE
   jdbc:
      nameConvention: lower
      sqlhandler: postgres
      sqlConditionProcessor:
         uppperString: true
         upperLike: true
   security:
      mode: default
      ignorePaths: /*, /assets/**, index.html, /api/bundle/**, /api/books/**, /api/authors/**, /api/genres/**, /api/publishers/**, /api/opinions/**, /api/lists/**, /api/signin/**
      roleInformationService:
         roleRepository: UserRoleDao
         roleNameColumn: rolename
         serverPermissionQueryId: serverPermissions
         serverPermissionNameColumn: PERMISSION_NAME
         clientPermissionQueryId: clientPermissions
         clientPermissionColumn: XMLCLIENTPERMISSION
      userInformationService:
         userRepository: UserDao
         userLoginColumn: user_
         userPasswordColumn: password
         queryId: login
         otherData:
            - name
            - surname
            - email
            - niv
            - userblocked
            - lastpasswordupdate
            - firstlogin
      userRoleInformationService:
         userRoleRepository: UserRoleDao
         queryId: userRole
         roleLoginColumn: user_
         roleNameColumn: rolename
server:
   port: ${PORT:33333}
   tomcat:
      uri-encoding: UTF-8
   compression:
      enabled: true
      mime-types: application/json, application/xml
spring:
   jpa:
      database: POSTGRESQL
      show-sql: true
   datasource:
      platform: postgres
      driver-class-name: org.postgresql.Driver
      jdbcUrl: jdbc:postgresql://45.84.210.174:65432/${PG_USER}
      username: ${PG_USER}
      password: ${PG_PASS}
      initialSize: 10
      testOnBorrow: true
   main:
      banner-mode: 'off'
   session:
      store-type: none
   autoconfigure:
      exclude: |
         org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration